
$main-color   : $orange;
$footer-bg : #263341;
$section-bg : #f9f9f9;
$white:    #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;

$gray-450:	#dbe1e7;
$gray-500: #adb5bd !default;
$gray-600: #5e6b76;
$gray-700: #495057 !default;
$gray-800: #243341;
$gray-900: #212529 !default;
$black:    #000 !default;

$grays: () !default;
$grays: map-merge((
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900
), $grays);

$blue:    #007bff !default;
$indigo:  #6610f2 !default;
$purple:  #6f42c1 !default;
$pink:    #e83e8c !default;
$red:     #dc3545 !default;
$orange:  #f76b1c;
$yellow:  #ffc107 !default;
$green:   #28a745 !default;
$teal:    #20c997 !default;
$cyan:    #17a2b8 !default;

$colors: () !default;
$colors: map-merge((
  "blue":       $blue,
  "indigo":     $indigo,
  "purple":     $purple,
  "pink":       $pink,
  "red":        $red,
  "orange":     $orange,
  "yellow":     $yellow,
  "green":      $green,
  "teal":       $teal,
  "cyan":       $cyan,
  "white":      $white,
  "gray":       $gray-600,
  "gray-dark":  $gray-800
), $colors);

$primary:       $orange;
$secondary:     $gray-450;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-800 !default;

$theme-colors: () ;
$theme-colors: map-merge((
  "primary":    $primary,
  "secondary":  $secondary,
  "success":    $success,
  "info":       $info,
  "warning":    $warning,
  "danger":     $danger,
  "light":      $light,
	"dark":       $dark,
), $theme-colors);

// $enable-rounded: false;
$border-radius: 3px;
$btn-border-radius:           $border-radius ;

$input-btn-line-height: 1.1;
$btn-line-height:             $input-btn-line-height ;


$button-font-size : 12px;
$input-btn-padding-y-lg:      0.9375rem ;  // 15px;
$input-btn-padding-x-lg:      4.1875rem ;  // 67px;
$input-btn-padding-y:         0.8125rem ;  //13px;
$input-btn-padding-x:         1.875rem  ;  // 30px;

$btn-padding-y:               $input-btn-padding-y;
$btn-padding-x:               $input-btn-padding-x;
$btn-padding-y-lg:            $input-btn-padding-y-lg ;
$btn-padding-x-lg:            $input-btn-padding-x-lg ;

$btn-font-weight: bold;
$btn-border-radius-lg:        $border-radius;
$btn-border-radius-sm:        $border-radius-sm ;

// navbar
$navbar-dark-active-color:          $main-color ;
$navbar-dark-hover-color:           rgba($main-color,1) ;
$navbar-dark-color:                 rgba($white, 1) ;
$navbar-nav-link-padding-x:         1.25rem;
$navbar-padding-y:                  ($spacer / 0.875);


.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properities so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}


.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .container,
        > .container-fluid {
          padding-right: 0;
          padding-left: 0;
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important;  // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}


.navbar-dark {
  .navbar-brand {
    color: $navbar-dark-active-color;

    @include hover-focus {
      color: $navbar-dark-active-color;
    }
	}



  .navbar-nav {
    .nav-link {
			color: $navbar-dark-color;


      @include hover-focus {
        color: $navbar-dark-hover-color;
      }

      &.disabled {
        color: $navbar-dark-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $navbar-dark-active-color;
    }
	}



  .navbar-toggler {
    color: $navbar-dark-color;
    border-color: $navbar-dark-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-dark-toggler-icon-bg;
  }

  .navbar-text {
    color: $navbar-dark-color;
    a {
      color: $navbar-dark-active-color;

      @include hover-focus {
        color: $navbar-dark-active-color;
      }
    }
  }
}



@function Rem($size) {
    $remSize: $size / 16px;
    @return #{$remSize}rem;
  }

@function Em($size) {
  $emSize: $size / 16px;
  @return #{$emSize}em;
}


@mixin fontSize($size) {
  font-size: $size; //Fallback in px
  font-size: Rem($size);
}

@each $color, $value in $theme-colors {
  .title-style--#{$color} {
    &::after {
			background-image: radial-gradient(circle at 0 0, lighten($value,8%), $value);
		}
  }
}

@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $button-font-size;
  line-height: $line-height;
  // Manually declare to provide an override to the browser default
  @if $enable-rounded {
    border-radius: $border-radius;
  } @else {
    border-radius: 0;
  }
}

.btn {
  display: inline-block;
	font-weight: $btn-font-weight;
	text-transform: uppercase;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  // Opinionated: add "hand" cursor to non-disabled .btn elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


@each $color, $value in $theme-colors {
  .btn-#{$color} {
		@include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-gradient-#{$color} {
		@include button-variant($value, $value);
		background-image: radial-gradient(circle at 0 0, lighten($value,8%), $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
		@include button-outline-variant($value);
  }
}

@each $color, $value in $theme-colors {
  .btn-opacity-#{$color} {
		border: 1px solid rgba($value,0.2);
  }
}

@each $color, $value in $theme-colors {
  .btn-border-#{$color} {
		border: 1px solid rgba($value,0.9);
  }
}